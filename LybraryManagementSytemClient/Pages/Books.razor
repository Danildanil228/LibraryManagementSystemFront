@page "/books"
@inject GraphQLService GraphQLService
@inject NavigationManager NavigationManager

<h3>Книги</h3>

<table class="table">
    <thead>
        <tr>
            <th>Название</th>
            <th>Автор</th>
            <th>Издательство</th>
            <th>Местоположение</th>
            <th>Доступность</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in books)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Author</td>
                <td>@book.Publisher</td>
                <td>@book.Location</td>
                <td>@(book.IsAvailable ? "Доступна" : "На руках")</td>
                <td>
                    <button @onclick="() => EditBook(book.Id)" class="btn btn-primary">Изменить</button>
                    <button @onclick="() => DeleteBook(book.Id)" class="btn btn-danger">Удалить</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<button @onclick="AddBook" class="btn btn-success">Добавить книгу</button>

@code {
    private List<Book> books = new List<Book>();

    protected override async Task OnInitializedAsync()
    {
        await LoadBooks();
    }

    private async Task LoadBooks()
    {
        var query = @"
        query {
            books {
                id
                title
                author
                publisher
                location
                isAvailable
            }
        }";
        var response = await GraphQLService.ExecuteQueryAsync<BooksResponse>(query);
        books = response.Books;
    }

    private void AddBook()
    {
        NavigationManager.NavigateTo("/add-book");
    }

    private void EditBook(int id)
    {
        NavigationManager.NavigateTo($"/edit-book/{id}");
    }

    private async Task DeleteBook(int id)
    {
        var mutation = $@"
        mutation {{
            deleteBook(id: {id})
        }}";
        await GraphQLService.ExecuteMutationAsync<bool>(mutation);
        await LoadBooks();
    }

    public class BooksResponse
    {
        public List<Book> Books { get; set; }
    }
}